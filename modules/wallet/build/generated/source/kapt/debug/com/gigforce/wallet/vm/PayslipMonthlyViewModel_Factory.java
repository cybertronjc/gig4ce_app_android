// Generated by Dagger (https://dagger.dev).
package com.gigforce.wallet.vm;

import com.gigforce.core.di.interfaces.IBuildConfigVM;
import com.gigforce.core.di.repo.IProfileFirestoreRepository;
import com.gigforce.wallet.WalletfirestoreRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PayslipMonthlyViewModel_Factory implements Factory<PayslipMonthlyViewModel> {
  private final Provider<WalletfirestoreRepository> walletRepositoryProvider;

  private final Provider<IProfileFirestoreRepository> profileFirebaseRepositoryProvider;

  private final Provider<IBuildConfigVM> buildConfigProvider;

  public PayslipMonthlyViewModel_Factory(
      Provider<WalletfirestoreRepository> walletRepositoryProvider,
      Provider<IProfileFirestoreRepository> profileFirebaseRepositoryProvider,
      Provider<IBuildConfigVM> buildConfigProvider) {
    this.walletRepositoryProvider = walletRepositoryProvider;
    this.profileFirebaseRepositoryProvider = profileFirebaseRepositoryProvider;
    this.buildConfigProvider = buildConfigProvider;
  }

  @Override
  public PayslipMonthlyViewModel get() {
    return newInstance(walletRepositoryProvider.get(), profileFirebaseRepositoryProvider.get(), buildConfigProvider.get());
  }

  public static PayslipMonthlyViewModel_Factory create(
      Provider<WalletfirestoreRepository> walletRepositoryProvider,
      Provider<IProfileFirestoreRepository> profileFirebaseRepositoryProvider,
      Provider<IBuildConfigVM> buildConfigProvider) {
    return new PayslipMonthlyViewModel_Factory(walletRepositoryProvider, profileFirebaseRepositoryProvider, buildConfigProvider);
  }

  public static PayslipMonthlyViewModel newInstance(WalletfirestoreRepository walletRepository,
      IProfileFirestoreRepository profileFirebaseRepository, IBuildConfigVM buildConfig) {
    return new PayslipMonthlyViewModel(walletRepository, profileFirebaseRepository, buildConfig);
  }
}
